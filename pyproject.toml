[tool.pytest.ini_options]
# Le dice a pytest que busque módulos desde la carpeta raíz
pythonpath = "."

[tool.mypy]
# Configuración más permisiva para desarrollo inicial
strict = false
ignore_missing_imports = true
disallow_untyped_calls = false
disallow_untyped_decorators = false
# Excluir archivos de prueba temporales
exclude = [
    "test_.*\\.py$",
]
# Plugin de SQLAlchemy temporalmente deshabilitado hasta configurar la BD
# plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.ruff]
# Directorio de trabajo
target-version = "py312"

# Archivos a incluir/excluir
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic/versions/*.py",  # Excluir archivos de migración de Alembic
]

# Longitud máxima de línea
line-length = 88

[tool.ruff.lint]
# Reglas a activar
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "S",  # bandit (security)
]

# Reglas a ignorar
ignore = [
    "E501",  # Línea demasiado larga (manejado por line-length)
    "S101",  # Uso de assert (común en tests)
    "S608",  # Posible inyección SQL (falsos positivos con SQLAlchemy)
    "B008",  # Do not perform function calls in argument defaults (FastAPI dependencies)
    "S104",  # Binding to all interfaces (necesario para desarrollo)
    "S105",  # Hardcoded passwords (son ejemplos y configuraciones de desarrollo)
    "S106",  # Hardcoded passwords in arguments (son ejemplos)
    "S113",  # Requests without timeout (simplificar pruebas)
]

# Configuraciones específicas por archivo
[tool.ruff.lint.per-file-ignores]
# Tests pueden usar asserts y imports no utilizados
"tests/**/*.py" = ["S101", "F401"]
# Scripts pueden tener imports no utilizados
"scripts/**/*.py" = ["F401"]
# Archivos de configuración pueden tener syntax específica
"test_api.py" = ["E999"]  # Syntax errors en archivo de prueba

[tool.ruff.lint.isort]
known-first-party = ["app"]
force-sort-within-sections = true

[tool.ruff.format]
# Usar comillas dobles
quote-style = "double"
# Mantener trailing commas
skip-magic-trailing-comma = false

[project]
name = "gestor-hr-v2"
version = "0.1.0"
description = "Sistema de gestión hotelera con FastAPI y SQLAlchemy"
authors = ["Tu Nombre <tu@email.com>"]
dependencies = [
    "fastapi[all]",
    "sqlalchemy",
    "psycopg2-binary",
    "ruff",
    "pytest",
    "mypy",
    "pre-commit",
    "pytest-watch",
    "playwright",
    "pytest-playwright"
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
